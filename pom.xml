<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>uk.thepragmaticdev</groupId>
  <artifactId>meco-api</artifactId>
  <packaging>jar</packaging>
  <version>0.2.0</version>
  <name>meco-api</name>
  <description>Monitoring Explicit Content Online: account, billing and key management services.</description>
  <licenses>
    <license>
      <name>Apache License 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0</url>
    </license>
  </licenses>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.2.2.RELEASE</version>
    <relativePath />
    <!-- lookup parent from repository -->
  </parent>

  <properties>
    <bucket4j.version>4.10.0</bucket4j.version>
    <cactoos.version>0.44</cactoos.version>
    <commons.io-version>2.7</commons.io-version>
    <commons.lang.version>3.9</commons.lang.version>
    <commons.net.version>3.6</commons.net.version>
    <flyway.test.version>6.1.0</flyway.test.version>
    <geoip.version>2.13.1</geoip.version>
    <gson.version>2.8.1</gson.version>
    <hamcrest-date.version>2.0.7</hamcrest-date.version>
    <jacoco.version>0.8.5</jacoco.version>
    <jarchive.version>1.0.0</jarchive.version>
    <java.version>13</java.version>
    <json.version>20190722</json.version>
    <jwt.version>0.9.1</jwt.version>
    <mailgun.version>1.9.0</mailgun.version>
    <maven.build.helper.plugin.version>1.9.1</maven.build.helper.plugin.version>
    <maven.checkstyle.plugin.version>3.1.1</maven.checkstyle.plugin.version>
    <maven.failsafe.plugin.version>3.0.0-M1</maven.failsafe.plugin.version>
    <maven.help.plugin.version>3.2.0</maven.help.plugin.version>
    <maven.surefire.plugin.version>3.0.0-M1</maven.surefire.plugin.version>
    <model.mapper.version>2.3.8</model.mapper.version>
    <okhttp3.version>4.0.1</okhttp3.version>
    <opencsv.version>5.1</opencsv.version>
    <rest.assured.version>4.2.0</rest.assured.version>
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>
    <sonar.organization>the-pragmatic-dev</sonar.organization>
    <sonar.projectKey>the-pragmatic-dev_meco-api</sonar.projectKey>
    <sonar.coverage.jacoco.xmlReportPaths>target/site/jacoco-aggregate/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
    <stripe.version>20.0.0</stripe.version>
    <uap-java.version>1.4.0</uap-java.version>
  </properties>

  <profiles>
    <!-- configuration for unit tests only - active by default -->
    <profile>
      <id>unit</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <skip.integration.tests>true</skip.integration.tests>
        <skip.unit.tests>false</skip.unit.tests>
      </properties>
    </profile>
    <!-- configuration for integration tests only -->
    <profile>
      <id>integration</id>
      <properties>
        <skip.integration.tests>false</skip.integration.tests>
        <skip.unit.tests>true</skip.unit.tests>
        <skip.checkstyle>false</skip.checkstyle>
      </properties>
    </profile>
    <!-- configuration for unit and integration tests -->
    <profile>
      <id>all</id>
      <properties>
        <skip.integration.tests>false</skip.integration.tests>
        <skip.unit.tests>false</skip.unit.tests>
        <skip.checkstyle>false</skip.checkstyle>
      </properties>
    </profile>
    <!-- configuration for heroku build -->
    <profile>
      <id>heroku</id>
      <properties>
        <skip.integration.tests>true</skip.integration.tests>
        <skip.unit.tests>true</skip.unit.tests>
        <skip.checkstyle>true</skip.checkstyle>
      </properties>
    </profile>
  </profiles>

  <dependencies>
    <!-- spring boot dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-tomcat</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-undertow</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-log4j2</artifactId>
    </dependency>
    <!-- rate limiting -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-cache</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.vladimir-bukhtoyarov</groupId>
      <artifactId>bucket4j-core</artifactId>
      <version>${bucket4j.version}</version>
    </dependency>
    <dependency>
      <groupId>com.github.vladimir-bukhtoyarov</groupId>
      <artifactId>bucket4j-hazelcast-3</artifactId>
      <version>${bucket4j.version}</version>
    </dependency>
    <dependency>
      <groupId>com.hazelcast</groupId>
      <artifactId>hazelcast</artifactId>
    </dependency>
    <dependency>
      <groupId>com.hazelcast</groupId>
      <artifactId>hazelcast-spring</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.cache</groupId>
      <artifactId>cache-api</artifactId>
    </dependency>
    <!-- database dependencies -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
    </dependency>
    <!-- stripe payments -->
    <dependency>
      <groupId>com.stripe</groupId>
      <artifactId>stripe-java</artifactId>
      <version>${stripe.version}</version>
    </dependency>
    <!-- mailgun emailing -->
    <dependency>
      <groupId>net.sargue</groupId>
      <artifactId>mailgun</artifactId>
      <version>${mailgun.version}</version>
    </dependency>
    <!-- project lombok -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>
    <!-- jwt security -->
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt</artifactId>
      <version>${jwt.version}</version>
    </dependency>
    <!-- geolocation -->
    <dependency>
      <groupId>com.maxmind.geoip2</groupId>
      <artifactId>geoip2</artifactId>
      <version>${geoip.version}</version>
    </dependency>
    <!-- user agent parser -->
    <dependency>
      <groupId>com.github.ua-parser</groupId>
      <artifactId>uap-java</artifactId>
      <version>${uap-java.version}</version>
    </dependency>
    <!-- json dependencies -->
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-parameter-names</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jdk8</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
    </dependency>
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>${json.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>${gson.version}</version>
    </dependency>
    <!-- apache commons dependencies -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons.io-version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commons.lang.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-net</groupId>
      <artifactId>commons-net</artifactId>
      <version>${commons.net.version}</version>
    </dependency>
    <!-- archiving and compressing files -->
    <dependency>
      <groupId>org.rauschig</groupId>
      <artifactId>jarchivelib</artifactId>
      <version>${jarchive.version}</version>
    </dependency>
    <!-- opencsv -->
    <dependency>
      <groupId>com.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>${opencsv.version}</version>
    </dependency>
    <!-- mapping objects -->
    <dependency>
      <groupId>org.modelmapper</groupId>
      <artifactId>modelmapper</artifactId>
      <version>${model.mapper.version}</version>
    </dependency>
    <!-- testing dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.vaadin.external.google</groupId>
          <artifactId>android-json</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.flywaydb.flyway-test-extensions</groupId>
      <artifactId>flyway-spring5-test</artifactId>
      <version>${flyway.test.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>spring-mock-mvc</artifactId>
      <version>${rest.assured.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>${rest.assured.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>json-path</artifactId>
      <version>${rest.assured.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>xml-path</artifactId>
      <version>${rest.assured.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.exparity</groupId>
      <artifactId>hamcrest-date</artifactId>
      <version>${hamcrest-date.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.cactoos</groupId>
      <artifactId>cactoos</artifactId>
      <version>${cactoos.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- test webclient -->
    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>okhttp</artifactId>
      <version>${okhttp3.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>mockwebserver</artifactId>
      <version>${okhttp3.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <!-- display active profiles in compile phase -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-help-plugin</artifactId>
        <version>${maven.help.plugin.version}</version>
        <executions>
          <execution>
            <id>show-profiles</id>
            <phase>compile</phase>
            <goals>
              <goal>active-profiles</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- package spring boot application as executable jar -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
            <configuration>
              <classifier>exec</classifier>
              <mainClass>uk.thepragmaticdev.Application</mainClass>
              <executable>true</executable>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- adds checkstyle reports our build -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven.checkstyle.plugin.version}</version>
        <configuration>
          <skip>${skip.checkstyle}</skip>
          <configLocation>checkstyle.google.xml</configLocation>
          <encoding>UTF-8</encoding>
          <violationSeverity>warning</violationSeverity>
          <consoleOutput>true</consoleOutput>
          <failsOnError>true</failsOnError>
          <linkXRef>false</linkXRef>
        </configuration>
        <executions>
          <execution>
            <id>validate</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- adds jacoco reports our build -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <executions>
          <!-- pre-unit-test starts the JaCoCo agent before the unit tests are run -->
          <execution>
            <id>pre-unit-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <!-- post-unit-test generates the unit test code coverage report after the unit tests pass -->
          <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          <!-- pre-integration-test prepares the JaCoCo agent for the integration tests -->
          <execution>
            <id>pre-integration-test</id>
            <goals>
              <goal>prepare-agent-integration</goal>
            </goals>
          </execution>
          <!-- post-integration-test runs the report for integration tests -->
          <execution>
            <id>post-integration-test</id>
            <goals>
              <goal>report-integration</goal>
            </goals>
          </execution>
          <!-- merge-results will merge the code coverage results of unit and integration tests into a new file, aggregate.exec -->
          <execution>
            <id>merge-results</id>
            <phase>verify</phase>
            <goals>
              <goal>merge</goal>
            </goals>
            <configuration>
              <fileSets>
                <fileSet>
                  <directory>${project.build.directory}</directory>
                  <includes>
                    <include>*.exec</include>
                  </includes>
                  <excludes>
                    <exclude>aggregate.exec</exclude>
                  </excludes>
                </fileSet>
              </fileSets>
              <destFile>${project.build.directory}/aggregate.exec</destFile>
            </configuration>
          </execution>
          <!-- post-merge-report will generate the report for the aggregate coverage -->
          <execution>
            <id>post-merge-report</id>
            <phase>verify</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/aggregate.exec</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-aggregate</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- adds integration source and resource directories to our build -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${maven.build.helper.plugin.version}</version>
        <executions>
          <!-- add a new source directory to our build -->
          <execution>
            <id>add-integration-sources</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/integration/java</source>
              </sources>
            </configuration>
          </execution>
          <!-- add a new resource directory to our build -->
          <execution>
            <id>add-integration-resources</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>add-test-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>src/integration/resources</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- run unit tests if ${skip.unit.tests} equals false -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.plugin.version}</version>
        <configuration>
          <skipTests>${skip.unit.tests}</skipTests>
        </configuration>
      </plugin>
      <!-- run integration tests if ${skip.integration.tests} equals false -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven.failsafe.plugin.version}</version>
        <configuration>
          <skipITs>${skip.integration.tests}</skipITs>
        </configuration>
        <executions>
          <execution>
            <id>integration-tests</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>